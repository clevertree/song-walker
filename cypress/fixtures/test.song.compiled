(async function rootTrack(track, {wait, execute, loadPreset}) {
    const lead = await loadPreset(track, "FluidR3/AcousticGrandPiano");
    const osc = await loadPreset(track, "Oscillator", {'type': 'square'});
    const perc = await loadPreset(track, "FluidR3/DrumKitRoom1");
    const reverb = await loadPreset(track, "Reverb");

    track1(track, lead);
    beat1(track,);
    if (await wait(8)) return;
    track1(track, osc);
    beat1(track,);
    if (await wait(8)) return;

    async function track1(track, instrument) {
        track = {...track, parentTrack: track, position: 0}
        track.instrument = instrument;
        track.duration = 1 / 4
        execute('C5');
        if (await wait(1 / 2)) return;
        track.pitchBend = -0.4
        track.config = {var: 'wut'}
        execute('C4', {duration: 1 / 4, velocity: 82});
        if (await wait(1 / 2)) return;  // override duration and velocity
        execute('G4');
        if (await wait(1 / 2)) return;
        execute('Eb4');
        if (await wait(1 / 2)) return;
        execute('Eb5');
        if (await wait(1 / 2)) return;
        execute('F5');
        if (await wait(1 / 2)) return;
        execute('Eb5');
        if (await wait(1 / 2)) return;
        execute('D5');
        if (await wait(1 / 2)) return;
        execute('C5');
        if (await wait(1 / 2)) return;
        execute('C4');
        if (await wait(1 / 2)) return;
        execute('G4');
        if (await wait(1 / 2)) return;
        execute('Eb4');
        if (await wait(1 / 2)) return;
        execute('D5');
        if (await wait(1 / 2)) return;
        execute('C4');
        if (await wait(1 / 2)) return;
        execute('Bb4');
        if (await wait(1 / 2)) return;
    }

    async function beat1(track) {
        track = {...track, parentTrack: track, position: 0}
        track.instrument = perc
        track.velocityDivisor = 10
        execute('chh');
        execute('abd');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('as');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3, duration: 1 / 8});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('abd');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        execute('abd', {velocity: 6});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('as');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 4)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 4)) return;
        execute('chh');
        execute('abd');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('as');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('abd');
        if (await wait(1 / 2)) return;
        execute('chh', {velocity: 3});
        execute('abd', {velocity: 6});
        if (await wait(1 / 2)) return;
        execute('chh');
        execute('as');
        if (await wait(1 / 2)) return;
        execute('ohh', {velocity: 3});
        if (await wait(1 / 2)) return;
    }
})
