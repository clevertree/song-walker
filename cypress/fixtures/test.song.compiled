(async function rootTrack(track, {waitAsync, execute, loadPreset}) {
    const lead = await loadPreset(track, /FluidR3.*\/.*Guitar/i);
    const osc = await loadPreset(track, "Oscillator", {'type': 'square'});
    const perc = await loadPreset(track, "FluidR3_GM/Room 1");
    const reverb = await loadPreset(track, "Reverb");
    track.beatsPerMinute = 160;

    track1(track, osc);
    beat1(track);
    if (await waitAsync(track, 8)) return;
    track1(track, lead);
    beat1(track);
    if (await waitAsync(track, 8)) return;

    async function track1(track, instrument) {
        track = {...track, position: 0}
        track.effects = [reverb];
        track.instrument = instrument;
        track.duration = 1 / 4
        execute(track, 'C3');
        if (await waitAsync(track, 1 / 2)) return;
        track.pitchBend = -0.4
        track.config = {var: 'wut'}
        execute(track, 'C2', {duration: 1 / 4});
        if (await waitAsync(track, 1 / 2)) return;  // override duration and velocity
        execute(track, 'G2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'Eb2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'Eb3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'F3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'Eb3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'D3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'C3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'C2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'G2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'Eb2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'D3');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'C2');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'Bb2');
        if (await waitAsync(track, 1 / 2)) return;
    }

    async function beat1(track) {
        track = {...track, position: 0}
// console.log(track.destination.context.currentTime, track.currentTime);
        // track.effects = [reverb];
        track.instrument = perc
        track.velocityDivisor = 10
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'as');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3, duration: 1 / 8});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'abd');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        execute(track, 'abd', {velocity: 6});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'as');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 4)) return;
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 4)) return;
        execute(track, 'chh');
        execute(track, 'abd');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'as');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'abd');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh', {velocity: 3});
        execute(track, 'abd', {velocity: 6});
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'chh');
        execute(track, 'as');
        if (await waitAsync(track, 1 / 2)) return;
        execute(track, 'ohh', {velocity: 3, duration: 1 / 3});
        if (await waitAsync(track, 1 / 2)) return;
    }
})
